openapi: 3.0.0
info:
  title: Resulting Open API file
  description: asd
  version: 1.0-SNAPSHOT
servers:
  - url: ..
    description: Test server
paths:
  /api/books:
    get:
      summary: Метод для получения списка книг
      description: Возвращает список книг в системе
      operationId: getBooks
      parameters:
        - in: query
          name: offset
          description: Смещение
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: Количество
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BookDto"
    post:
      summary: Метод для создания книги
      description: Создает книгу
      operationId: createBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookDto"
      responses:
        200:
          description: Book created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookDto"

  /api/books/{id}:
    get:
      summary: Метод для получения книги по ID
      description: Возвращает книгу по ID
      operationId: getBookById
      parameters:
        - in: path
          name: id
          description: ID книги
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Book found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookDto"
        404:
          description: Book not found
    put:
      summary: Метод для обновления книги
      description: Обновляет книгу
      operationId: updateBook
      parameters:
        - in: path
          name: id
          description: ID книги
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookDto"
      responses:
        200:
          description: Book updated
        404:
          description: Book not found
    delete:
      summary: Метод для удаления книги
      description: Удаляет книгу
      operationId: deleteBook
      parameters:
        - in: path
          name: id
          description: ID книги
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Book deleted
        404:
          description: Book not found

components:
  schemas:
    AuthorDto:
      description: DTO сущности 'Автор'
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Author ID
        name:
          type: string
          description: Имя автора
        dateOfBirthday:
          type: string
          format: date
          description: Дата рождения
        dateOfDeath:
          type: string
          format: date
          description: Дата смерти

    BookDto:
      description: DTO сущности 'Книга'
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Book ID
        title:
          type: string
          description: Название книги
        authors:
          type: array
          items:
            $ref: '#/components/schemas/AuthorDto'
        publicationDate:
          type: string
          format: date
          description: Дата публикации
        description:
          type: string
          description: Описание книги